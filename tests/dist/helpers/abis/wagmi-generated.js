// Generated by @wagmi/cli@1.1.0 on 6/12/2023 at 10:27:05 AM
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SuperToken
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
export const superTokenABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "host", internalType: "contract ISuperfluid", type: "address" },
    ],
  },
  { type: "error", inputs: [], name: "SF_TOKEN_AGREEMENT_ALREADY_EXISTS" },
  { type: "error", inputs: [], name: "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST" },
  { type: "error", inputs: [], name: "SF_TOKEN_BURN_INSUFFICIENT_BALANCE" },
  { type: "error", inputs: [], name: "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE" },
  { type: "error", inputs: [], name: "SF_TOKEN_ONLY_HOST" },
  { type: "error", inputs: [], name: "SF_TOKEN_ONLY_LISTED_AGREEMENT" },
  { type: "error", inputs: [], name: "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS" },
  { type: "error", inputs: [], name: "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS" },
  { type: "error", inputs: [], name: "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS" },
  {
    type: "error",
    inputs: [],
    name: "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
  },
  {
    type: "error",
    inputs: [],
    name: "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
  },
  { type: "error", inputs: [], name: "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS" },
  {
    type: "error",
    inputs: [],
    name: "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
  },
  { type: "error", inputs: [], name: "SUPER_TOKEN_NO_UNDERLYING_TOKEN" },
  { type: "error", inputs: [], name: "SUPER_TOKEN_ONLY_HOST" },
  { type: "error", inputs: [], name: "SUPER_TOKEN_ONLY_SELF" },
  { type: "error", inputs: [], name: "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS" },
  { type: "error", inputs: [], name: "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS" },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "agreementClass",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "id", internalType: "bytes32", type: "bytes32", indexed: false },
      {
        name: "data",
        internalType: "bytes32[]",
        type: "bytes32[]",
        indexed: false,
      },
    ],
    name: "AgreementCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "agreementClass",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "id", internalType: "bytes32", type: "bytes32", indexed: false },
      {
        name: "penaltyAccount",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "rewardAccount",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "rewardAmount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "AgreementLiquidated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "liquidatorAccount",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      {
        name: "agreementClass",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "id", internalType: "bytes32", type: "bytes32", indexed: false },
      {
        name: "penaltyAccount",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "bondAccount",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "rewardAmount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "bailoutAmount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "AgreementLiquidatedBy",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "agreementClass",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "id", internalType: "bytes32", type: "bytes32", indexed: false },
      {
        name: "liquidatorAccount",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "targetAccount",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "rewardAmountReceiver",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      {
        name: "rewardAmount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "targetAccountBalanceDelta",
        internalType: "int256",
        type: "int256",
        indexed: false,
      },
      {
        name: "liquidationTypeData",
        internalType: "bytes",
        type: "bytes",
        indexed: false,
      },
    ],
    name: "AgreementLiquidatedV2",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "agreementClass",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "account",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "slotId",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "AgreementStateUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "agreementClass",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "id", internalType: "bytes32", type: "bytes32", indexed: false },
    ],
    name: "AgreementTerminated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "agreementClass",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "id", internalType: "bytes32", type: "bytes32", indexed: false },
      {
        name: "data",
        internalType: "bytes32[]",
        type: "bytes32[]",
        indexed: false,
      },
    ],
    name: "AgreementUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenHolder",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "AuthorizedOperator",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "bailoutAccount",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "bailoutAmount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Bailout",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "from", internalType: "address", type: "address", indexed: true },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: false },
      {
        name: "operatorData",
        internalType: "bytes",
        type: "bytes",
        indexed: false,
      },
    ],
    name: "Burned",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "uuid",
        internalType: "bytes32",
        type: "bytes32",
        indexed: false,
      },
      {
        name: "codeAddress",
        internalType: "address",
        type: "address",
        indexed: false,
      },
    ],
    name: "CodeUpdated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "version", internalType: "uint8", type: "uint8", indexed: false },
    ],
    name: "Initialized",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: false },
      {
        name: "operatorData",
        internalType: "bytes",
        type: "bytes",
        indexed: false,
      },
    ],
    name: "Minted",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tokenHolder",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "RevokedOperator",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: false },
      {
        name: "operatorData",
        internalType: "bytes",
        type: "bytes",
        indexed: false,
      },
    ],
    name: "Sent",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "account",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "TokenDowngraded",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "account",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "TokenUpgraded",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "value",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "operator", internalType: "address", type: "address" }],
    name: "authorizeOperator",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "balance", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "amount", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "burn",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "castrate",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id", internalType: "bytes32", type: "bytes32" },
      { name: "data", internalType: "bytes32[]", type: "bytes32[]" },
    ],
    name: "createAgreement",
    outputs: [],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "defaultOperators",
    outputs: [{ name: "", internalType: "address[]", type: "address[]" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "amount", internalType: "uint256", type: "uint256" }],
    name: "downgrade",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "downgradeTo",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "getAccountActiveAgreements",
    outputs: [
      {
        name: "",
        internalType: "contract ISuperAgreement[]",
        type: "address[]",
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "agreementClass", internalType: "address", type: "address" },
      { name: "id", internalType: "bytes32", type: "bytes32" },
      { name: "dataLength", internalType: "uint256", type: "uint256" },
    ],
    name: "getAgreementData",
    outputs: [{ name: "data", internalType: "bytes32[]", type: "bytes32[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "agreementClass", internalType: "address", type: "address" },
      { name: "account", internalType: "address", type: "address" },
      { name: "slotId", internalType: "uint256", type: "uint256" },
      { name: "dataLength", internalType: "uint256", type: "uint256" },
    ],
    name: "getAgreementStateSlot",
    outputs: [
      { name: "slotData", internalType: "bytes32[]", type: "bytes32[]" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getCodeAddress",
    outputs: [
      { name: "codeAddress", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getHost",
    outputs: [{ name: "host", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getUnderlyingToken",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "granularity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "underlyingToken",
        internalType: "contract IERC20",
        type: "address",
      },
      { name: "underlyingDecimals", internalType: "uint8", type: "uint8" },
      { name: "n", internalType: "string", type: "string" },
      { name: "s", internalType: "string", type: "string" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "timestamp", internalType: "uint256", type: "uint256" },
    ],
    name: "isAccountCritical",
    outputs: [{ name: "isCritical", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "isAccountCriticalNow",
    outputs: [{ name: "isCritical", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "timestamp", internalType: "uint256", type: "uint256" },
    ],
    name: "isAccountSolvent",
    outputs: [{ name: "isSolvent", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "isAccountSolventNow",
    outputs: [{ name: "isSolvent", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "tokenHolder", internalType: "address", type: "address" },
    ],
    name: "isOperatorFor",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id", internalType: "bytes32", type: "bytes32" },
      { name: "liquidationTypeData", internalType: "bytes", type: "bytes" },
      { name: "liquidatorAccount", internalType: "address", type: "address" },
      { name: "useDefaultRewardAccount", internalType: "bool", type: "bool" },
      { name: "targetAccount", internalType: "address", type: "address" },
      { name: "rewardAmount", internalType: "uint256", type: "uint256" },
      {
        name: "targetAccountBalanceDelta",
        internalType: "int256",
        type: "int256",
      },
    ],
    name: "makeLiquidationPayoutsV2",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "operationApprove",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
      { name: "subtractedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "operationDecreaseAllowance",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "operationDowngrade",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
      { name: "addedValue", internalType: "uint256", type: "uint256" },
    ],
    name: "operationIncreaseAllowance",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "recipient", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
      { name: "userData", internalType: "bytes", type: "bytes" },
    ],
    name: "operationSend",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
      { name: "recipient", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "operationTransferFrom",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "operationUpgrade",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
      { name: "operatorData", internalType: "bytes", type: "bytes" },
    ],
    name: "operatorBurn",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "sender", internalType: "address", type: "address" },
      { name: "recipient", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
      { name: "operatorData", internalType: "bytes", type: "bytes" },
    ],
    name: "operatorSend",
    outputs: [],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "proxiableUUID",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "timestamp", internalType: "uint256", type: "uint256" },
    ],
    name: "realtimeBalanceOf",
    outputs: [
      { name: "availableBalance", internalType: "int256", type: "int256" },
      { name: "deposit", internalType: "uint256", type: "uint256" },
      { name: "owedDeposit", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", internalType: "address", type: "address" }],
    name: "realtimeBalanceOfNow",
    outputs: [
      { name: "availableBalance", internalType: "int256", type: "int256" },
      { name: "deposit", internalType: "uint256", type: "uint256" },
      { name: "owedDeposit", internalType: "uint256", type: "uint256" },
      { name: "timestamp", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "operator", internalType: "address", type: "address" }],
    name: "revokeOperator",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "selfApproveFor",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
      { name: "userData", internalType: "bytes", type: "bytes" },
    ],
    name: "selfBurn",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
      { name: "userData", internalType: "bytes", type: "bytes" },
    ],
    name: "selfMint",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "holder", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
      { name: "recipient", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "selfTransferFrom",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "recipient", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "send",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "delta", internalType: "int256", type: "int256" },
    ],
    name: "settleBalance",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id", internalType: "bytes32", type: "bytes32" },
      { name: "dataLength", internalType: "uint256", type: "uint256" },
    ],
    name: "terminateAgreement",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "recipient", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "recipient", internalType: "address", type: "address" }],
    name: "transferAll",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "holder", internalType: "address", type: "address" },
      { name: "recipient", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "id", internalType: "bytes32", type: "bytes32" },
      { name: "data", internalType: "bytes32[]", type: "bytes32[]" },
    ],
    name: "updateAgreementData",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "account", internalType: "address", type: "address" },
      { name: "slotId", internalType: "uint256", type: "uint256" },
      { name: "slotData", internalType: "bytes32[]", type: "bytes32[]" },
    ],
    name: "updateAgreementStateSlot",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newAddress", internalType: "address", type: "address" }],
    name: "updateCode",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "amount", internalType: "uint256", type: "uint256" }],
    name: "upgrade",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "upgradeTo",
    outputs: [],
  },
];
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
export const erc20ABI = [
  {
    type: "event",
    inputs: [
      { name: "owner", type: "address", indexed: true },
      { name: "spender", type: "address", indexed: true },
      { name: "value", type: "uint256", indexed: false },
    ],
    name: "Approval",
  },
  {
    type: "event",
    inputs: [
      { name: "from", type: "address", indexed: true },
      { name: "to", type: "address", indexed: true },
      { name: "value", type: "uint256", indexed: false },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", type: "address" },
      { name: "spender", type: "address" },
    ],
    name: "allowance",
    outputs: [{ type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", type: "address" },
      { name: "amount", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", type: "address" }],
    name: "balanceOf",
    outputs: [{ type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ type: "uint8" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "recipient", type: "address" },
      { name: "amount", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "sender", type: "address" },
      { name: "recipient", type: "address" },
      { name: "amount", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", type: "address" },
      { name: "addedValue", type: "uint256" },
    ],
    name: "increaseAllowance",
    outputs: [{ type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", type: "address" },
      { name: "subtractedValue", type: "uint256" },
    ],
    name: "decreaseAllowance",
    outputs: [{ type: "bool" }],
  },
];
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC721
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
export const erc721ABI = [
  {
    type: "event",
    inputs: [
      { name: "owner", type: "address", indexed: true },
      { name: "spender", type: "address", indexed: true },
      { name: "tokenId", type: "uint256", indexed: true },
    ],
    name: "Approval",
  },
  {
    type: "event",
    inputs: [
      { name: "owner", type: "address", indexed: true },
      { name: "operator", type: "address", indexed: true },
      { name: "approved", type: "bool", indexed: false },
    ],
    name: "ApprovalForAll",
  },
  {
    type: "event",
    inputs: [
      { name: "from", type: "address", indexed: true },
      { name: "to", type: "address", indexed: true },
      { name: "tokenId", type: "uint256", indexed: true },
    ],
    name: "Transfer",
  },
  {
    stateMutability: "payable",
    type: "function",
    inputs: [
      { name: "spender", type: "address" },
      { name: "tokenId", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "account", type: "address" }],
    name: "balanceOf",
    outputs: [{ type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId", type: "uint256" }],
    name: "getApproved",
    outputs: [{ type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", type: "address" },
      { name: "operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ name: "owner", type: "address" }],
  },
  {
    stateMutability: "payable",
    type: "function",
    inputs: [
      { name: "from", type: "address" },
      { name: "to", type: "address" },
      { name: "tokenId", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "from", type: "address" },
      { name: "to", type: "address" },
      { name: "id", type: "uint256" },
      { name: "data", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "operator", type: "address" },
      { name: "approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "index", type: "uint256" }],
    name: "tokenByIndex",
    outputs: [{ type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner", type: "address" },
      { name: "index", type: "uint256" },
    ],
    name: "tokenByIndex",
    outputs: [{ name: "tokenId", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ type: "uint256" }],
  },
  {
    stateMutability: "payable",
    type: "function",
    inputs: [
      { name: "sender", type: "address" },
      { name: "recipient", type: "address" },
      { name: "tokenId", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
  },
];
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CFAv1Forwarder
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * - [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Goerli Etherscan__](https://goerli.etherscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Optimism Optimism Explorer__](https://explorer.optimism.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Bnb Smart Chain Bsc Scan__](https://bscscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Gnosis Gnosis Chain Explorer__](https://blockscout.com/xdai/mainnet//address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Polygon Polygon Scan__](https://polygonscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Optimism Goerli Etherscan__](https://goerli-optimism.etherscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Celo Celo Explorer__](https://explorer.celo.org/mainnet/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Avalanche Fuji Snow Trace__](https://testnet.snowtrace.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Avalanche Snow Trace__](https://snowtrace.io/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 * - [__View Contract on Arbitrum Goerli Arbiscan__](https://goerli.arbiscan.io//address/0xcfA132E353cB4E398080B9700609bb008eceB125)
 */
export const cfAv1ForwarderABI = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "host", internalType: "contract ISuperfluid", type: "address" },
    ],
  },
  { type: "error", inputs: [], name: "CFA_FWD_INVALID_FLOW_RATE" },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "sender", internalType: "address", type: "address" },
      { name: "receiver", internalType: "address", type: "address" },
      { name: "flowrate", internalType: "int96", type: "int96" },
      { name: "userData", internalType: "bytes", type: "bytes" },
    ],
    name: "createFlow",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "sender", internalType: "address", type: "address" },
      { name: "receiver", internalType: "address", type: "address" },
      { name: "userData", internalType: "bytes", type: "bytes" },
    ],
    name: "deleteFlow",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "account", internalType: "address", type: "address" },
    ],
    name: "getAccountFlowInfo",
    outputs: [
      { name: "lastUpdated", internalType: "uint256", type: "uint256" },
      { name: "flowrate", internalType: "int96", type: "int96" },
      { name: "deposit", internalType: "uint256", type: "uint256" },
      { name: "owedDeposit", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "account", internalType: "address", type: "address" },
    ],
    name: "getAccountFlowrate",
    outputs: [{ name: "flowrate", internalType: "int96", type: "int96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "flowrate", internalType: "int96", type: "int96" },
    ],
    name: "getBufferAmountByFlowrate",
    outputs: [
      { name: "bufferAmount", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "sender", internalType: "address", type: "address" },
      { name: "receiver", internalType: "address", type: "address" },
    ],
    name: "getFlowInfo",
    outputs: [
      { name: "lastUpdated", internalType: "uint256", type: "uint256" },
      { name: "flowrate", internalType: "int96", type: "int96" },
      { name: "deposit", internalType: "uint256", type: "uint256" },
      { name: "owedDeposit", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "sender", internalType: "address", type: "address" },
      { name: "flowOperator", internalType: "address", type: "address" },
    ],
    name: "getFlowOperatorPermissions",
    outputs: [
      { name: "permissions", internalType: "uint8", type: "uint8" },
      { name: "flowrateAllowance", internalType: "int96", type: "int96" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "sender", internalType: "address", type: "address" },
      { name: "receiver", internalType: "address", type: "address" },
    ],
    name: "getFlowrate",
    outputs: [{ name: "flowrate", internalType: "int96", type: "int96" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "flowOperator", internalType: "address", type: "address" },
    ],
    name: "grantPermissions",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "flowOperator", internalType: "address", type: "address" },
    ],
    name: "revokePermissions",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "receiver", internalType: "address", type: "address" },
      { name: "flowrate", internalType: "int96", type: "int96" },
    ],
    name: "setFlowrate",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "sender", internalType: "address", type: "address" },
      { name: "receiver", internalType: "address", type: "address" },
      { name: "flowrate", internalType: "int96", type: "int96" },
    ],
    name: "setFlowrateFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "sender", internalType: "address", type: "address" },
      { name: "receiver", internalType: "address", type: "address" },
      { name: "flowrate", internalType: "int96", type: "int96" },
      { name: "userData", internalType: "bytes", type: "bytes" },
    ],
    name: "updateFlow",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "token", internalType: "contract ISuperToken", type: "address" },
      { name: "flowOperator", internalType: "address", type: "address" },
      { name: "permissions", internalType: "uint8", type: "uint8" },
      { name: "flowrateAllowance", internalType: "int96", type: "int96" },
    ],
    name: "updateFlowOperatorPermissions",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
];
export const CFA = [
  {
    inputs: [
      { internalType: "contract ISuperfluid", name: "host", type: "address" },
      {
        internalType: "contract IConstantFlowAgreementHook",
        name: "_hookAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "AGREEMENT_BASE_ONLY_HOST", type: "error" },
  {
    inputs: [{ internalType: "uint256", name: "_code", type: "uint256" }],
    name: "APP_RULE",
    type: "error",
  },
  { inputs: [], name: "CFA_ACL_FLOW_RATE_ALLOWANCE_EXCEEDED", type: "error" },
  { inputs: [], name: "CFA_ACL_NO_NEGATIVE_ALLOWANCE", type: "error" },
  { inputs: [], name: "CFA_ACL_NO_SENDER_CREATE", type: "error" },
  { inputs: [], name: "CFA_ACL_NO_SENDER_FLOW_OPERATOR", type: "error" },
  { inputs: [], name: "CFA_ACL_NO_SENDER_UPDATE", type: "error" },
  { inputs: [], name: "CFA_ACL_OPERATOR_NO_CREATE_PERMISSIONS", type: "error" },
  { inputs: [], name: "CFA_ACL_OPERATOR_NO_DELETE_PERMISSIONS", type: "error" },
  { inputs: [], name: "CFA_ACL_OPERATOR_NO_UPDATE_PERMISSIONS", type: "error" },
  { inputs: [], name: "CFA_ACL_UNCLEAN_PERMISSIONS", type: "error" },
  { inputs: [], name: "CFA_DEPOSIT_TOO_BIG", type: "error" },
  { inputs: [], name: "CFA_FLOW_ALREADY_EXISTS", type: "error" },
  { inputs: [], name: "CFA_FLOW_DOES_NOT_EXIST", type: "error" },
  { inputs: [], name: "CFA_FLOW_RATE_TOO_BIG", type: "error" },
  { inputs: [], name: "CFA_HOOK_OUT_OF_GAS", type: "error" },
  { inputs: [], name: "CFA_INSUFFICIENT_BALANCE", type: "error" },
  { inputs: [], name: "CFA_INVALID_FLOW_RATE", type: "error" },
  { inputs: [], name: "CFA_NON_CRITICAL_SENDER", type: "error" },
  { inputs: [], name: "CFA_NO_SELF_FLOW", type: "error" },
  { inputs: [], name: "CFA_ZERO_ADDRESS_RECEIVER", type: "error" },
  { inputs: [], name: "CFA_ZERO_ADDRESS_SENDER", type: "error" },
  { inputs: [], name: "OUT_OF_GAS", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "uuid",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "codeAddress",
        type: "address",
      },
    ],
    name: "CodeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "flowOperator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "permissions",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "int96",
        name: "flowRateAllowance",
        type: "int96",
      },
    ],
    name: "FlowOperatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int96",
        name: "flowRate",
        type: "int96",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "totalSenderFlowRate",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "totalReceiverFlowRate",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "FlowUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "flowOperator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
    ],
    name: "FlowUpdatedExtension",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint8", name: "version", type: "uint8" },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "CFA_HOOK_GAS_LIMIT",
    outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_MINIMUM_DEPOSIT",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAXIMUM_DEPOSIT",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAXIMUM_FLOW_RATE",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "agreementType",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "flowOperator", type: "address" },
      { internalType: "bytes", name: "ctx", type: "bytes" },
    ],
    name: "authorizeFlowOperatorWithFullControl",
    outputs: [{ internalType: "bytes", name: "newCtx", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "castrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "constantFlowAgreementHook",
    outputs: [
      {
        internalType: "contract IConstantFlowAgreementHook",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "receiver", type: "address" },
      { internalType: "int96", name: "flowRate", type: "int96" },
      { internalType: "bytes", name: "ctx", type: "bytes" },
    ],
    name: "createFlow",
    outputs: [{ internalType: "bytes", name: "newCtx", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "sender", type: "address" },
      { internalType: "address", name: "receiver", type: "address" },
      { internalType: "int96", name: "flowRate", type: "int96" },
      { internalType: "bytes", name: "ctx", type: "bytes" },
    ],
    name: "createFlowByOperator",
    outputs: [{ internalType: "bytes", name: "newCtx", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "flowOperator", type: "address" },
      {
        internalType: "int96",
        name: "subtractedFlowRateAllowance",
        type: "int96",
      },
      { internalType: "bytes", name: "ctx", type: "bytes" },
    ],
    name: "decreaseFlowRateAllowance",
    outputs: [{ internalType: "bytes", name: "newCtx", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "sender", type: "address" },
      { internalType: "address", name: "receiver", type: "address" },
      { internalType: "bytes", name: "ctx", type: "bytes" },
    ],
    name: "deleteFlow",
    outputs: [{ internalType: "bytes", name: "newCtx", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "sender", type: "address" },
      { internalType: "address", name: "receiver", type: "address" },
      { internalType: "bytes", name: "ctx", type: "bytes" },
    ],
    name: "deleteFlowByOperator",
    outputs: [{ internalType: "bytes", name: "newCtx", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "account", type: "address" },
    ],
    name: "getAccountFlowInfo",
    outputs: [
      { internalType: "uint256", name: "timestamp", type: "uint256" },
      { internalType: "int96", name: "flowRate", type: "int96" },
      { internalType: "uint256", name: "deposit", type: "uint256" },
      { internalType: "uint256", name: "owedDeposit", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCodeAddress",
    outputs: [
      { internalType: "address", name: "codeAddress", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "int96", name: "flowRate", type: "int96" },
    ],
    name: "getDepositRequiredForFlowRate",
    outputs: [{ internalType: "uint256", name: "deposit", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "sender", type: "address" },
      { internalType: "address", name: "receiver", type: "address" },
    ],
    name: "getFlow",
    outputs: [
      { internalType: "uint256", name: "timestamp", type: "uint256" },
      { internalType: "int96", name: "flowRate", type: "int96" },
      { internalType: "uint256", name: "deposit", type: "uint256" },
      { internalType: "uint256", name: "owedDeposit", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "bytes32", name: "flowId", type: "bytes32" },
    ],
    name: "getFlowByID",
    outputs: [
      { internalType: "uint256", name: "timestamp", type: "uint256" },
      { internalType: "int96", name: "flowRate", type: "int96" },
      { internalType: "uint256", name: "deposit", type: "uint256" },
      { internalType: "uint256", name: "owedDeposit", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "sender", type: "address" },
      { internalType: "address", name: "flowOperator", type: "address" },
    ],
    name: "getFlowOperatorData",
    outputs: [
      { internalType: "bytes32", name: "flowOperatorId", type: "bytes32" },
      { internalType: "uint8", name: "permissions", type: "uint8" },
      { internalType: "int96", name: "flowRateAllowance", type: "int96" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "bytes32", name: "flowOperatorId", type: "bytes32" },
    ],
    name: "getFlowOperatorDataByID",
    outputs: [
      { internalType: "uint8", name: "permissions", type: "uint8" },
      { internalType: "int96", name: "flowRateAllowance", type: "int96" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "uint256", name: "deposit", type: "uint256" },
    ],
    name: "getMaximumFlowRateFromDeposit",
    outputs: [{ internalType: "int96", name: "flowRate", type: "int96" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "account", type: "address" },
    ],
    name: "getNetFlow",
    outputs: [{ internalType: "int96", name: "flowRate", type: "int96" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "flowOperator", type: "address" },
      { internalType: "int96", name: "addedFlowRateAllowance", type: "int96" },
      { internalType: "bytes", name: "ctx", type: "bytes" },
    ],
    name: "increaseFlowRateAllowance",
    outputs: [{ internalType: "bytes", name: "newCtx", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "timestamp", type: "uint256" },
    ],
    name: "isPatricianPeriod",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "account", type: "address" },
    ],
    name: "isPatricianPeriodNow",
    outputs: [
      {
        internalType: "bool",
        name: "isCurrentlyPatricianPeriod",
        type: "bool",
      },
      { internalType: "uint256", name: "timestamp", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "time", type: "uint256" },
    ],
    name: "realtimeBalanceOf",
    outputs: [
      { internalType: "int256", name: "dynamicBalance", type: "int256" },
      { internalType: "uint256", name: "deposit", type: "uint256" },
      { internalType: "uint256", name: "owedDeposit", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "flowOperator", type: "address" },
      { internalType: "bytes", name: "ctx", type: "bytes" },
    ],
    name: "revokeFlowOperatorWithFullControl",
    outputs: [{ internalType: "bytes", name: "newCtx", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newAddress", type: "address" }],
    name: "updateCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "receiver", type: "address" },
      { internalType: "int96", name: "flowRate", type: "int96" },
      { internalType: "bytes", name: "ctx", type: "bytes" },
    ],
    name: "updateFlow",
    outputs: [{ internalType: "bytes", name: "newCtx", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "sender", type: "address" },
      { internalType: "address", name: "receiver", type: "address" },
      { internalType: "int96", name: "flowRate", type: "int96" },
      { internalType: "bytes", name: "ctx", type: "bytes" },
    ],
    name: "updateFlowByOperator",
    outputs: [{ internalType: "bytes", name: "newCtx", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISuperfluidToken",
        name: "token",
        type: "address",
      },
      { internalType: "address", name: "flowOperator", type: "address" },
      { internalType: "uint8", name: "permissions", type: "uint8" },
      { internalType: "int96", name: "flowRateAllowance", type: "int96" },
      { internalType: "bytes", name: "ctx", type: "bytes" },
    ],
    name: "updateFlowOperatorPermissions",
    outputs: [{ internalType: "bytes", name: "newCtx", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
];
//# sourceMappingURL=wagmi-generated.js.map
